# --------------------------
# Main (Global) Configuration
# --------------------------

worker_processes auto;

events {
    worker_connections 4096;  # Higher for production
}

http {
    include mime.types;
    default_type application/octet-stream;

    # --------------------------
    # General Performance Tweaks
    # --------------------------
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # --------------------------
    # Gzip Compression
    # --------------------------
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # --------------------------
    # Rate Limiting
    # --------------------------
    # Define a limit zone: 10 MB shared memory, limit 10 requests/sec per IP
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;

    # --------------------------
    # Proxy Cache for API
    # --------------------------
    proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;

    # --------------------------
    # Upstream: Node.js backend cluster
    # --------------------------
    upstream nodejs_cluster {
        least_conn;
        server 127.0.0.1:3001 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:3002 max_fails=3 fail_timeout=30s;
        server 127.0.0.1:3003 max_fails=3 fail_timeout=30s;
    }

    # --------------------------
    # HTTPS Server
    # --------------------------
    server {
        listen 443 ssl http2;
        server_name localhost;

        # SSL settings
        ssl_certificate /Users/nana/nginx-certs/nginx-selfsigned.crt;
        ssl_certificate_key /Users/nana/nginx-certs/nginx-selfsigned.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Serve static files with caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # API location with rate limiting + caching
        location /api/ {
            limit_req zone=api_limit burst=20 nodelay;    # Limit requests per IP
            proxy_cache api_cache;                         # Enable cache
            proxy_cache_valid 200 1m;                      # Cache 200 OK for 1 min
            proxy_cache_valid any 10s;                     # Cache other responses for 10 sec
            add_header X-Cache-Status $upstream_cache_status;

            proxy_pass http://nodejs_cluster;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default location (non-API)
        location / {
            proxy_pass http://nodejs_cluster;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # --------------------------
        # Custom Error Pages
        # --------------------------
        error_page 404 /custom_404.html;
        error_page 500 502 503 504 /custom_50x.html;

        location = /custom_404.html {
            root /var/www/errors;
            internal;
        }

        location = /custom_50x.html {
            root /var/www/errors;
            internal;
        }
    }

    # --------------------------
    # HTTP â†’ HTTPS Redirect
    # --------------------------
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }
}
